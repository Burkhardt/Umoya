<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <IsWindows Condition="'$(OS)' == 'Windows_NT'">true</IsWindows>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <SpaRoot>..\..\clients\UI\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Core'">
    <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Entities\**" />
    <Content Remove="Entities\**" />
    <EmbeddedResource Remove="Entities\**" />
    <None Remove="Entities\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="McMaster.Extensions.CommandLineUtils" Version="2.3.2" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Core\Umoya.Core.csproj" />
    <ProjectReference Include="..\Core.Server\Umoya.Core.Server.csproj" />
    <ProjectReference Include="..\Database.Sqlite\Umoya.Database.Sqlite.csproj" />
    <ProjectReference Include="..\Protocol\Umoya.Protocol.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />    
  </Target>

   <Target Name="ResolveUIPublishForUbuntu" BeforeTargets="Publish" Condition=" '$(IsLinux)' == 'true'">
    <Message Text="Resolving Tool dependecies (ubuntu) for Publish" Importance="high" />
    <Exec Command="mv ../../clients/UI/build  $(PublishDir)/wwwroot" />
  </Target>

  <Target Name="ResolveUIPublishForWindow" BeforeTargets="Publish" Condition=" '$(IsWindows)' == 'true'">
    <Message Text="Resolving Tool dependecies (windows) for Publish" Importance="high" />
    <Exec Command="move  ..\..\clients\UI\build  $(PublishDir)\wwwroot" />
  </Target>

</Project>
